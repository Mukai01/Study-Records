-- 1. 概念設計(ER図)---------------------------------------------------------------------------
-- エンティティ: テーブルのようなもの
-- 属性: テーブルの列のようなもの
-- 関連: リレーションシップのようなもの

-- 概念設計の成果はER(Entity-relation)図にまとめる
-- 四角形の上: エンティティの名前
-- 線より上: エンティティを1意に特定する主キー
-- FK: 外部キー
-- エンティティ同士の数量的な関係をカーディナリティという

-- 2. 論理設計(ER図)---------------------------------------------------------------------------
-- 概念上のエンティティをリレーショナルデータモデルで取り扱いやすい形のテーブルに定義する
-- 多対多の分解 : これは2つの1対多に分解する
-- 主キーを持たないエンティティに人工キーを追加する

-- 上記を実施した後正規化を行う
-- 正規化：現実世界の冗長な情報を、管理に適する複数の表の形に変換
-- 結合:IT世界の断片的な情報を、利用に適する統合した形に変換
-- 第一正規形: 繰り返しの列やセルの結合が現れてはいけない
-- 繰り返し列を別テーブルに移し、元の主キーをコピーし、複合主キーを作成する

-- 第二正規形: 全ての非キー列は、主キーにきれいに関数従属しているべきである
-- 複合主キーの片方だけ決まると、値が確定してしまう場合が、汚い関数従属
-- 関数従属: ある列Aの値が決まれば、おのずとBが決まる場合、BはAに関数従属している
-- きたない関数従属している列を切り出し、主キーをコピーする

-- 第三正規形: 主キーに関数従属する列にさらに関数従属する列は存在してはならない
-- 間接的に主キーに関数従属する列を切り出し、直接関数従属先だった列をコピーする

-- 3. 物理設計(テーブル設計仕様書)----------------------------------------------------------------
-- テーブル名、列名を決定する
-- 列の型を決定する
-- 制約、デフォルト値を決定する
-- インデックスを設定する
